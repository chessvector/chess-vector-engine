(function() {
    var type_impls = Object.fromEntries([["chess_vector_engine",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ObjectPool%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chess_vector_engine/utils/object_pool.rs.html#14-50\">Source</a><a href=\"#impl-ObjectPool%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"chess_vector_engine/utils/object_pool/struct.ObjectPool.html\" title=\"struct chess_vector_engine::utils::object_pool::ObjectPool\">ObjectPool</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/chess_vector_engine/utils/object_pool.rs.html#16-25\">Source</a><h4 class=\"code-header\">pub fn <a href=\"chess_vector_engine/utils/object_pool/struct.ObjectPool.html#tymethod.new\" class=\"fn\">new</a>&lt;F&gt;(factory: F, max_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>) -&gt; Self<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>() -&gt; T + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Create a new object pool with a factory function</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/chess_vector_engine/utils/object_pool.rs.html#28-39\">Source</a><h4 class=\"code-header\">pub fn <a href=\"chess_vector_engine/utils/object_pool/struct.ObjectPool.html#tymethod.get\" class=\"fn\">get</a>(&amp;self) -&gt; <a class=\"struct\" href=\"chess_vector_engine/utils/object_pool/struct.PooledObject.html\" title=\"struct chess_vector_engine::utils::object_pool::PooledObject\">PooledObject</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Get an object from the pool, creating one if necessary</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size\" class=\"method\"><a class=\"src rightside\" href=\"src/chess_vector_engine/utils/object_pool.rs.html#42-44\">Source</a><h4 class=\"code-header\">pub fn <a href=\"chess_vector_engine/utils/object_pool/struct.ObjectPool.html#tymethod.size\" class=\"fn\">size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Get the current pool size</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/chess_vector_engine/utils/object_pool.rs.html#47-49\">Source</a><h4 class=\"code-header\">pub fn <a href=\"chess_vector_engine/utils/object_pool/struct.ObjectPool.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Clear the pool</p>\n</div></details></div></details>",0,"chess_vector_engine::utils::object_pool::MovePool","chess_vector_engine::utils::object_pool::HashMapPool"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[3453]}